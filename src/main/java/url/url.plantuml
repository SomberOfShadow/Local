@startuml

title __URL's Class Diagram__\n

  namespace url {
    class url.ElasticsearchPutMapTest {
        {static} - INDEX_NAME : String
        {static} - LOGGER : Logger
        {static} - MAPPINGS : String
        {static} - MJE_VERSION : String
        {static} - TYPE : String
        {static} - client : RestHighLevelClient
        {static} - mapping : Map<String, Object>
        {static} + main()
        {static} - close()
        {static} - createIndex()
        {static} - createMapping()
        {static} - existIndex()
        {static} - getClient()
        {static} - putMappings()
        {static} - sendDataToElasticsearch()
    }
  }
  

  namespace url {
    class url.ElasticsearchTest {
        {static} - INDEX_NAME : String
        {static} - LOGGER : Logger
        {static} - PUT_MAP : String
        {static} - client : RestHighLevelClient
        {static} + main()
        {static} - create()
        {static} - getMap()
    }
  }
  

  namespace url {
    class url.ElaticsearchIncludeNameTest {
        {static} - INDEX_NAME : String
        {static} - LOGGER : Logger
        {static} - MAPPINGS : String
        {static} - MJE_VERSION : String
        {static} - MJE_VERSION_END : int
        {static} - MJE_VERSION_PREFIX : String
        {static} - MJE_VERSION_START : int
        {static} - NEW_REPO_URL : String
        {static} - OLD_REPO_URL : String
        {static} - REGEX : String
        {static} - client : RestHighLevelClient
        {static} - lastModifiedList : Elements
        {static} - mapping : Map<String, Object>
        {static} - mjeinfo : HashMap<String, Object>
        {static} - sizeOnDiskList : Elements
        {static} - textList : Elements
        {static} + main()
        {static} - clear()
        {static} - close()
        {static} - createIndex()
        {static} - createMapping()
        {static} - existIndex()
        {static} - getClient()
        {static} - getDataFromUrl()
        {static} - getMapData()
        {static} - matchJarAndRecord()
        {static} - putMappings()
        {static} - sendDataToElasticsearch()
    }
  }
  

  namespace url {
    class url.GetJsonFromUrl {
        {static} + getConfidentialLevel()
        {static} + getData()
        {static} + main()
        {static} + readJsonFromUrl()
        {static} - readAll()
    }
  }
  

  namespace url {
    class url.GetXmlFromUrl {
        {static} + getData()
        {static} + main()
        {static} - getDataFromUrl()
        {static} - stringToXml()
    }
  }
  

  namespace url {
    class url.StringToXmlByBS {
        {static} - INDEX_NAME : String
        {static} - LOGGER : Logger
        {static} - MJE_VERSION : String
        {static} - MJE_VERSION_END : int
        {static} - MJE_VERSION_PREFIX : String
        {static} - MJE_VERSION_START : int
        {static} - NEW_REPO_URL : String
        {static} - OLD_REPO_URL : String
        {static} - REGEX : String
        {static} - client : RestHighLevelClient
        {static} - lastModifiedList : Elements
        {static} - map : HashMap<String, Object>
        {static} - sizeOnDiskList : Elements
        {static} - textList : Elements
        {static} + main()
        {static} + sendDataToElasticsearch()
        {static} - clear()
        {static} - close()
        {static} - getDataFromUrl()
        {static} - getMapData()
        {static} - matchJarAndRecord()
    }
  }
  

  namespace url {
    class url.StringToXmlExample {
        {static} + getData()
        {static} + main()
        {static} - convertStringToXMLDocument()
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
